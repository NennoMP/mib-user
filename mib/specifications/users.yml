openapi: "3.0.1"
info:
  title: Users Service API
  description: Users Microservice of Message in a Bottle Application
  version: "0.1"

servers:
  - url: /

paths:
  /user:
    post:
      summary: Add a new user
      tags:
        - Users
      operationId: mib.resources.users.create_user
      requestBody:
        description: Create a new customer inside microservice app
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Created
        403:
          description: User already exists
        default:
          description: Error during creation of the user

  /user/{user_id}:
    get:
      tags: [ User ]
      description: Get a user by its id
      operationId: mib.resources.users.get_user
      parameters:
        - name: user_id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Return user
        404:
          description: User not found
        default:
          description: An error occured during retrieving the user

    post:
      tags: [ User ]
      description: Unregister an user
      operationId: mib.resources.users.unregister_user
      parameters:
        - name: user_id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: body
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: Ananas91@
      responses:
        202:
          description: User unregistered
        401:
          description: User password does not match
        404:
          description: user not found
        default:
          description: An error occured during the unregistration of the user

  /profile/{user_id}:
    get:
      tags: [ User ]
      description: Get a user profile by its id
      operationId: mib.resources.users.get_profile
      parameters:
        - name: user_id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Return user profile
        404:
          description: User not found
        default:
          description: An error occured during retrieving the user
    
    post:
      tags: [ User ]
      description: Update an user
      operationId: mib.resources.users.update_profile
      parameters:
        - name: user_id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: body
              type: object
              required:
                - email
                - firstname
                - lastname
                - location
              properties:
                email:
                  type: string
                  example: name@example.com
                firstname:
                  type: string
                  example: name
                lastname:
                  type: string
                  example: name
                location:
                  type: string
                  example: city
      responses:
        200:
          description: User updated
        409:
          description: User not updated
        default:
          description: An error occured during the update of the user

  /profile/{user_id}/profile_picture: 
    post:
      tags: [ User ]
      description: Updates the profile picture of the user by its id
      operationId: mib.resources.users.update_profile_picture
      parameters:
        - name: user_id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: body
              type: object
              required:
                - format
                - file
              properties:
                format:
                  type: string
                  example: png
                file:
                  type: string
                  format: binary
      responses:
        202:
          description: Profile picture updated
        404:
          description: User not found
        default:
          description: An error occured while updating the profile picture

  /profile/{user_id}/language_filter: 
    post:
      tags: [ User ]
      description: Updates the language filter of the user by id
      operationId: mib.resources.users.update_language_filter
      parameters:
        - name: user_id
          description: User Unique ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Language filter updated
        404:
          description: User not found
        default:
          description: An error occured while updating the language filter

  /user_email/{user_email}:
    get:
      tags: [ User ]
      description: Get a user by its email
      operationId: mib.resources.users.get_user_by_email
      parameters:
        - name: user_email
          description: User Unique Email
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return user
        404:
          description: User not found
        default:
          description: An error occured during retrieving the user

  /authenticate:
    post:
      summary: Authenticate a user
      tags: [ Users ]
      operationId: mib.resources.auth.authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: auth
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@studenti.unipi.it
                password:
                  type: string
                  example: abcd123A
      responses:
        200:
          description: User credentials are correct
          content:
            application/json:
              schema:
                type: object
                properties:
                  authentication:
                    type: string
                    description: "It can be failure or success"
                    default: 'failure'
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: User credentials are not correct
          content:
            application/json:
              schema:
                type: object
                properties:
                  authentication:
                    type: string
                    description: "It can be failure or success"
                    default: 'failure'
        403:
          description: User account has been banned
          content:
            application/json:
              schema:
                type: object
                properties:
                  authentication:
                    type: string
                    description: "It can be failure or success"
                    default: 'failure'
        default:
          description: An error occured during login
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_message:
                    type: string        

  /logout:
      post:
        summary: Logout a user
        tags: [ Users ]
        operationId: mib.resources.auth.logout
        requestBody:
          required: true
          content:
            application/json:
              schema:
                x-body-name: auth
                type: object
                required:
                  - email
                properties:
                  email:
                    type: string
                    format: email
                    example: user@studenti.unipi.it
        responses:
          200:
            description: Logout correct
          default:
            description: An error occured during login
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error_message:
                      type: string        


  /users/:
    get:
      tags: [ User ]
      description: Get a users list
      operationId: mib.resources.users.get_users_list
      responses:
        200:
          description: Return users list
        default:
          description: An error occured during retrieving the user
  
  /users/<user_email>/report_user:
    post:
      tags: [ User ]
      description: Report an user by its email
      operationId: mib.resources.users.report_user
      parameters:
        - name: user_email
          description: User Unique Email
          in: path
          required: true
          schema:
            type: string
      responses:
        202:
          description: User reported
        404:
          description: User not found
        default:
          description: An error occured during the report of the user

  /users/<dest_user_email>/unreport_user:
    post:
      tags: [ User ]
      description: Unreport an user by its email
      operationId: mib.resources.users.unreport_user
      parameters:
        - name: dest_user_email
          description: Target User Unique Email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: body
              type: object
              required:
                - src_user_id
              properties:
                id:
                  type: integer
                  format: int64
      responses:
        202:
          description: User unreported
        401:
          description: Unauthorized action
        404:
          description: User not found
        default:
          description: An error occured during the unreport of the user

  /users/<dest_user_email>/update_block_user:
    post:
      tags: [ User ]
      description: (Un)Block an user by its email
      operationId: mib.resources.users.update_block_user
      parameters:
        - name: dest_user_email
          description: User Unique Email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: body
              type: object
              required:
                - src_user_id
              properties:
                id:
                  type: integer
                  format: int64
      responses:
        202:
          description: User (un)blocked
        404:
          description: User not found
        default:
          description: An error occured during the (un)block of the user

  /users/<dest_user_email>/update_ban_user:
    post:
      tags: [ User ]
      description: (Un)Ban an user by its email
      operationId: mib.resources.users.update_ban_user
      parameters:
        - name: dest_user_email
          description: Target User Unique Email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: body
              type: object
              required:
                - src_user_id
              properties:
                id:
                  type: integer
                  format: int64
      responses:
        202:
          description: User (un)banned
        401:
          description: Unauthorized action
        404:
          description: User not found
        default:
          description: An error occured during the (un)ban of the user
  
components:
  schemas:
    User:
      required:
        - firstname
        - lastname
        - email
        - date_of_birth
        - location
      type: object
      properties:
        firstname:
          type: string
          description: First name of customer
          example: Mario
        lastname:
          type: string
          description: Last name of customer
          example: Rossi
        email:
          type: string
          description: Customer email
          example: mario.rossi@example.org
          format: email
        date_of_birth:
          type: string
          description: Customer date_of_birth
          example: '2020-01-01'
          format: date
        location:
          type: string
          description: Customer location
          example: 'Pisa'
        password:
          type: string
          description: Customer password
          example: 'abcd1234'
          minLength: 5
          maxLength: 127

    
    UpdateUser:
      required:
        - email
        - password
        - location
      type: object
      properties:
        email:
          type: string
          description: Customer email
          example: mario.rossi@example.org
          format: email
        password:
          type: string
          description: Customer password
          example: 'abcd1234'
          minLength: 5
          maxLength: 127
        location:
          type: string
          description: Customer location
          example: 'Pisa'